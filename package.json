{
  "name": "ledfx",
  "version": "2.0.105-b15",
  "description": "LedFx v2 - BladeMOD!",
  "author": "YeonV aka Blade",
  "private": true,
  "main": "public/electron.js",
  "homepage": ".",
  "engines": {
    "node": ">=20"
  },
  "type": "module",
  "dependencies": {
    "@dnd-kit/core": "^6.2.0",
    "@dnd-kit/modifiers": "^8.0.0",
    "@electron/remote": "^2.0.9",
    "@emotion/react": "^11.13.5",
    "@emotion/styled": "^11.13.5",
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.15.0",
    "@fontsource/roboto": "^5.0.14",
    "@hello-pangea/dnd": "^17.0.0",
    "@mui/icons-material": "^6.1.9",
    "@mui/lab": "^6.0.0-beta.17",
    "@mui/material": "^6.1.9",
    "@mui/styles": "^6.1.9",
    "@mui/x-data-grid": "^7.22.3",
    "@testing-library/react": "^16.0.1",
    "@types/qs": "^6.9.17",
    "@types/reactour": "^1.18.5",
    "@typescript-eslint/eslint-plugin": "^8.16.0",
    "@typescript-eslint/parser": "^8.16.0",
    "@webcam/react": "^1.0.1",
    "axios": "^1.7.8",
    "base32-decode": "^1.0.0",
    "base32-encode": "1.2.0",
    "chart.js": "4.4.6",
    "color": "^4.2.3",
    "compare-versions": "^6.1.1",
    "conf": "^13.0.1",
    "crypto": "^1.0.1",
    "deep-object-diff": "^1.1.9",
    "electron-is-dev": "3.0.1",
    "electron-squirrel-startup": "^1.0.0",
    "electron-store": "10.0.0",
    "eslint-config-react-app": "7.0.1",
    "eslint-config-standard": "^17.1.0",
    "eslint-plugin-prettier": "^5.2.1",
    "immer": "10.1.1",
    "is-electron": "^2.2.2",
    "jwt-decode": "^4.0.0",
    "notistack": "^3.0.1",
    "oauth-pkce": "0.0.7",
    "postcss": "^8.4.49",
    "prop-types": "^15.8.1",
    "qrcode": "^1.5.4",
    "qs": "^6.13.1",
    "react": "^18.2.0",
    "react-beautiful-dnd": "^13.1.1",
    "react-chartjs-2": "5.2.0",
    "react-dom": "^18.2.0",
    "react-dropzone": "^14.3.5",
    "react-easy-crop": "^5.2.0",
    "react-full-screen": "^1.1.1",
    "react-gamepads": "^1.0.0",
    "react-gcolor-picker": "^1.3.1",
    "react-git-info": "^2.0.1",
    "react-hotkeys-hook": "^4.6.1",
    "react-otp-input": "^3.1.1",
    "react-rnd": "^10.4.12",
    "react-router-dom": "^7.0.1",
    "react-scripts": "5.0.1",
    "react-webcam": "^7.2.0",
    "react-zoom-pan-pinch": "^3.6.1",
    "reactour": "^1.19.2",
    "sockette": "^2.0.6",
    "strip-ansi": "7.1.0",
    "styled-components": "^6.1.13",
    "ts-deepmerge": "^7.0.2",
    "typescript": "^5.7.2",
    "universal-cookie": "^7.2.2",
    "use-api-polling": "^0.1.4",
    "use-debounce": "^10.0.4",
    "use-indexeddb": "^2.0.2",
    "use-long-press": "^3.2.0",
    "web-vitals": "^4.2.4",
    "webmidi": "^3.1.12",
    "workbox-core": "^7.3.0",
    "workbox-expiration": "^7.3.0",
    "workbox-precaching": "^7.3.0",
    "workbox-routing": "^7.3.0",
    "workbox-strategies": "^7.3.0",
    "zustand": "^4.5.5"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "run-script-os",
    "build:win32": "set GENERATE_SOURCEMAP=false && set CI=false && react-scripts build",
    "build:default": "GENERATE_SOURCEMAP=false CI=false react-scripts build",
    "prebuild": "node -e \"let pkg=require('./package.json'); pkg.homepage='/'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "postbuild": "run-script-os",
    "postbuild:win32": "node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\" && del /q build\\app && rm -rf build\\preload.js && rm -rf build\\renderer.js && rm -rf build\\electron.js",
    "postbuild:default": "node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\" && rm -rf build/app && rm -rf build/preload.js && rm -rf build/renderer.js && rm -rf build/electron.js",
    "buildhass": "GENERATE_SOURCEMAP=false CI=false react-scripts build",
    "prebuildhass": "node -e \"let pkg=require('./package.json'); pkg.homepage='./'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "postbuildhass": "node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\" && rm -rf build/app && rm -rf build/preload.js && rm -rf build/renderer.js && rm -rf build/electron.js",
    "buildgh": "GENERATE_SOURCEMAP=false PUBLIC_URL=/LedFx-Frontend-v2/ CI=false react-scripts build",
    "prebuildgh": "node -e \"let pkg=require('./package.json'); pkg.homepage='/LedFx-Frontend-v2/'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "postbuildgh": "rm -rf build/app && rm -rf build/preload.js && rm -rf build/renderer.js && rm -rf build/electron.js",
    "buildledfx": "cross-env GENERATE_SOURCEMAP=false PUBLIC_URL=/ CI=false react-scripts build",
    "prebuildledfx": "node -e \"let pkg=require('./package.json'); pkg.homepage='/'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "postbuildledfx": "node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\" && del /q /s \"build\\app\" && rmdir /q /s \"build\\app\" && del /q \"build\\preload.js\" && del /q \"build\\renderer.js\" && del /q \"build\\electron.js\"",
    "test": "react-scripts test",
    "eject": "react-scripts eject",
    "predeploy": "yarn buildgh",
    "deploy": "gh-pages -d build",
    "lint": "eslint --fix",
    "packs": "electron-builder --dir",
    "dist": "run-script-os",
    "predist": "node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "dist:win32": "set GENERATE_SOURCEMAP=false && set CI=false && react-scripts build && electron-builder --config electron-builder.json -w zip -w portable -w nsis",
    "dist:default": "GENERATE_SOURCEMAP=false CI=false react-scripts build && electron-builder --config electron-builder.json",
    "distsetup": "run-script-os",
    "predistsetup": "node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "distsetup:win32": "set GENERATE_SOURCEMAP=false && set MS_STORE=true && react-scripts build && electron-builder --config electron-builder.json -w nsis",
    "distsetup:default": "GENERATE_SOURCEMAP=false MS_STORE=true react-scripts build && electron-builder --config electron-builder.json",
    "distcc": "run-script-os",
    "predistcc": "node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "distcc:win32": "set GENERATE_SOURCEMAP=false && set CI=false && react-scripts build && electron-builder",
    "distcc:default": "GENERATE_SOURCEMAP=false react-scripts build && electron-builder",
    "distall": "run-script-os",
    "predistall": "set PUBLIC_URL=. && node -e \"let pkg=require('./package.json'); pkg.homepage='.'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "distall:win32": "set GENERATE_SOURCEMAP=false && set CI=false && react-scripts build && electron-builder && electron-builder --config electron-builder.json -w zip -w portable -w nsis",
    "distall:default": "GENERATE_SOURCEMAP=false CI=false react-scripts build && electron-builder && electron-builder --config electron-builder.json",
    "dist-multi": "GENERATE_SOURCEMAP=false react-scripts build && electron-builder -mwl",
    "dev": "concurrently \"cross-env BROWSER=none yarn start\" \"yarn electron\"",
    "compile-electron": "run-script-os",
    "compile-electron:win32": "copy app\\*.ts build\\*.js",
    "compile-electron:default": "cp ./app/electron.ts ./build/electron.js && cp ./app/preload.ts ./build/preload.js && cp ./app/renderer.ts ./build/renderer.js && cp ./app/serviceWorker.ts ./build/serviceWorker.js",
    "electron": "wait-on http://127.0.0.1:3000 && electron .",
    "postinstall": "electron-builder install-app-deps",
    "prebuild-storybook": "run-script-os",
    "prebuild-storybook:win32": "set PUBLIC_URL=/LedFx-Frontend-v2/docs",
    "prebuild-storybook:default": "PUBLIC_URL=/LedFx-Frontend-v2/docs",
    "build-storybookgh": "PUBLIC_URL=/LedFx-Frontend-v2/docs storybook build",
    "prebuild-storybookgh": "node -e \"let pkg=require('./package.json'); pkg.homepage='/LedFx-Frontend-v2/docs'; require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));\"",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "plugin:storybook/recommended"
    ],
    "overrides": [
      {
        "files": [
          "**/*.stories.*"
        ],
        "rules": {
          "import/no-anonymous-default-export": "off"
        }
      }
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11",
    "@chromatic-com/storybook": "3.2.2",
    "@eslint/compat": "^1.2.3",
    "@storybook/addon-essentials": "8.4.7",
    "@storybook/addon-interactions": "8.4.7",
    "@storybook/addon-onboarding": "8.4.7",
    "@storybook/addon-themes": "8.4.7",
    "@storybook/blocks": "8.4.7",
    "@storybook/preset-create-react-app": "8.4.7",
    "@storybook/react": "8.4.7",
    "@storybook/react-webpack5": "8.4.7",
    "@storybook/test": "8.4.7",
    "@types/babel__template": "^7.4.4",
    "@types/chart.js": "^2.9.41",
    "@types/color": "^4.2.0",
    "@types/eslint__js": "^8.42.3",
    "@types/prop-types": "^15.7.11",
    "@types/react": "^18.3.12",
    "@types/react-beautiful-dnd": "^13.1.8",
    "@types/react-dom": "^18.2.19",
    "@types/react-router-dom": "^5.3.3",
    "@types/styled-components": "^5.1.34",
    "concurrently": "^9.1.0",
    "cross-env": "^7.0.3",
    "electron": "^33.2.1",
    "electron-builder": "^25.1.8",
    "eslint": "8.57",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^3.6.3",
    "eslint-plugin-flowtype": "^8.0.3",
    "eslint-plugin-import": "2.31.0",
    "eslint-plugin-json": "^4.0.1",
    "eslint-plugin-jsx-a11y": "6.10.2",
    "eslint-plugin-n": "^17.14.0",
    "eslint-plugin-promise": "^7.2.1",
    "eslint-plugin-react": "^7.37.2",
    "eslint-plugin-storybook": "^0.11.1",
    "gh-pages": "^6.1.1",
    "prettier": "^3.4.1",
    "react-is": "^18.2.0",
    "run-script-os": "^1.1.6",
    "storybook": "8.4.7",
    "wait-on": "^8.0.0",
    "webpack": "^5.96.1"
  },
  "resolutions": {
    "string-width": "4.2.3"
  },
  "build": {
    "extraResources": [
      {
        "from": "./extraResources/",
        "to": "extraResources",
        "filter": [
          "**/*"
        ]
      }
    ],
    "win": {
      "icon": "build/icon.ico",
      "artifactName": "LedFx_CC-v${version}--${os}.${ext}"
    },
    "portable": {
      "artifactName": "LedFx_CC-v${version}--${os}-portable.${ext}"
    },
    "nsis": {
      "artifactName": "LedFx_CC-v${version}--${os}-setup.${ext}"
    },
    "linux": {
      "icon": "build/icon.png",
      "artifactName": "LedFx_CC-v${version}--${os}.${ext}"
    },
    "appImage": {
      "artifactName": "LedFx_CC-v${version}--${os}.${ext}"
    },
    "snap": {
      "artifactName": "LedFx_CC-v${version}--${os}.${ext}"
    },
    "mac": {
      "icon": "build/icon.png",
      "artifactName": "LedFx_CC-v${version}--${os}-${arch}.${ext}"
    },
    "dmg": {
      "background": "src/assets/DMG_BG.jpg",
      "contents": [
        {
          "x": 135,
          "y": 165
        },
        {
          "x": 407,
          "y": 165,
          "type": "link",
          "path": "/Applications"
        }
      ],
      "iconSize": 120,
      "iconTextSize": 14,
      "window": {
        "height": 380
      }
    },
    "protocols": {
      "name": "LedFx",
      "schemes": [
        "ledfx"
      ]
    }
  }
}
