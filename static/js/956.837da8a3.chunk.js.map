{"version":3,"file":"static/js/956.837da8a3.chunk.js","mappings":"MAUA,IAAIA,EAA+C,KAEnDC,KAAKC,UAAYC,eAAgBC,GAC/B,MAAM,OAAEC,EAAM,SAAEC,EAAQ,QAAEC,EAAO,mBAAEC,EAAkB,cAAEC,EAAa,IAAEC,GAAQN,EAAEO,KAEjE,UAAXN,EACY,OAAVL,IACFA,EAAQY,YAAYT,UAClB,IAAIU,EAAYL,EAAqB,EACrC,GAAIK,GAAaN,EAAQO,OAAQ,CAC/B,IAAIL,EAIF,YADAR,KAAKc,YAAY,CAAEV,OAAQ,SAF3BQ,EAAY,CAKhB,CAEA,MAAMG,EAAcT,EAAQM,GAC5B,UACQI,MAAMP,EAAM,cAAe,CAC/BQ,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,GAAIP,EACJX,OAAQ,eAGZJ,KAAKc,YAAY,CAAEV,OAAQ,eAAgBQ,aAC7C,CAAE,MAAOW,GACPC,QAAQD,MAAM,4BAA6BA,EAC7C,GACClB,IAEe,SAAXD,GACK,OAAVL,IACF0B,cAAc1B,GACdA,EAAQ,KAGd,C","sources":["workers/timerWorker.ts"],"sourcesContent":["/* eslint-disable no-restricted-globals */\ninterface WorkerMessageTimer {\n  action: 'start' | 'stop'\n  interval: number\n  scenePL: string[]\n  scenePLactiveIndex: number\n  scenePLrepeat: boolean\n  url: string\n}\n\nlet timer: ReturnType<typeof setInterval> | null = null\n\nself.onmessage = async function (e: MessageEvent<WorkerMessageTimer>) {\n  const { action, interval, scenePL, scenePLactiveIndex, scenePLrepeat, url } = e.data\n\n  if (action === 'start') {\n    if (timer === null) {\n      timer = setInterval(async () => {\n        let nextIndex = scenePLactiveIndex + 1\n        if (nextIndex >= scenePL.length) {\n          if (scenePLrepeat) {\n            nextIndex = 0\n          } else {\n            self.postMessage({ action: 'stop' })\n            return\n          }\n        }\n\n        const nextSceneId = scenePL[nextIndex]\n        try {\n          await fetch(url + '/api/scenes', {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: nextSceneId,\n              action: 'activate'\n            })\n          })\n          self.postMessage({ action: 'sceneChanged', nextIndex })\n        } catch (error) {\n          console.error('Failed to activate scene:', error)\n        }\n      }, interval)\n    }\n  } else if (action === 'stop') {\n    if (timer !== null) {\n      clearInterval(timer)\n      timer = null\n    }\n  }\n}\n"],"names":["timer","self","onmessage","async","e","action","interval","scenePL","scenePLactiveIndex","scenePLrepeat","url","data","setInterval","nextIndex","length","postMessage","nextSceneId","fetch","method","headers","body","JSON","stringify","id","error","console","clearInterval"],"sourceRoot":""}